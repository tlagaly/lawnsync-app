#!/bin/bash
# LawnSync pre-push hook
# Prevents pushing directly to master and warns if branches are out of sync

# Color codes for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Get the current branch name
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# 1. Prevent pushing directly to master
if [ "$CURRENT_BRANCH" = "master" ]; then
    echo -e "${RED}ERROR: Direct push to master branch is not allowed.${NC}"
    echo -e "${YELLOW}Create a pull request from development to master instead.${NC}"
    exit 1
fi

# 2. Check if development is behind master before pushing
if [ "$CURRENT_BRANCH" = "development" ]; then
    # Fetch latest from remote
    git fetch origin master --quiet
    
    # Get master hash
    MASTER_HASH=$(git rev-parse origin/master)
    DEV_HASH=$(git rev-parse HEAD)
    
    if git merge-base --is-ancestor $DEV_HASH $MASTER_HASH && [ "$DEV_HASH" != "$MASTER_HASH" ]; then
        echo -e "${YELLOW}WARNING: development branch is behind master.${NC}"
        echo -e "${YELLOW}It's recommended to merge master into development before pushing:${NC}"
        echo -e "${YELLOW}  git pull origin master${NC}"
        echo -e "${YELLOW}Continue push anyway? (y/n)${NC}"
        
        # Read from terminal (not stdin, which could be redirected)
        read -r response </dev/tty
        
        if [[ ! "$response" =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}Push canceled. Merge master into development before pushing.${NC}"
            exit 1
        fi
    fi
fi

# 3. General check for any branches that might need updating
if command -v git >/dev/null 2>&1; then
    # Get branch status compared to its upstream
    ahead=$(git rev-list --count @{u}..HEAD 2>/dev/null || echo "0")
    behind=$(git rev-list --count HEAD..@{u} 2>/dev/null || echo "0")
    
    # Print warnings based on ahead/behind status
    if [ "$behind" -gt 0 ] && [ "$ahead" -gt 0 ]; then
        echo -e "${YELLOW}WARNING: Your branch has diverged from the remote.${NC}"
        echo -e "${YELLOW}  - Your branch is ahead by $ahead commit(s)${NC}"
        echo -e "${YELLOW}  - Your branch is behind by $behind commit(s)${NC}"
        echo -e "${YELLOW}Consider running git pull --rebase before pushing.${NC}"
    elif [ "$behind" -gt 0 ]; then
        echo -e "${YELLOW}WARNING: Your branch is behind its upstream by $behind commit(s).${NC}"
        echo -e "${YELLOW}Consider running git pull before pushing.${NC}"
    elif [ "$ahead" -gt 10 ]; then
        echo -e "${YELLOW}NOTE: You're about to push $ahead commit(s).${NC}"
    fi
fi

# All checks passed, exit successfully
exit 0