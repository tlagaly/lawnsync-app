rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasUserIdField(userId) {
      return isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // User profiles - users can read/write only their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Lawn profiles - users can read/write only their own lawn profiles
    match /lawn_profiles/{profileId} {
      allow read, write: if hasUserIdField(userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Tasks - users can read/write only their own tasks
    match /tasks/{taskId} {
      allow read, write: if hasUserIdField(userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Watering schedules - users can read/write only their own schedules
    match /watering_schedules/{scheduleId} {
      allow read, write: if hasUserIdField(userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Gallery photos - users can read/write only their own photos
    match /gallery_photos/{photoId} {
      allow read, write: if hasUserIdField(userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Plant identifications - users can read/write only their own identifications
    match /plant_identifications/{identificationId} {
      allow read, write: if hasUserIdField(userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
  }
}